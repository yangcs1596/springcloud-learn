<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>${APP_NAME}</contextName>
    <springProperty name="APP_NAME" scope="context" source="spring.application.name"/>
    <springProperty name="LOG_FILE" scope="context" source="logging.file"
                    defaultValue="E:/logs/application/${APP_NAME}"/>
    <springProperty name="LOG_POINT_FILE" scope="context" source="logging.file" defaultValue="E:/logs/point"/>
    <springProperty name="LOG_MAXFILESIZE" scope="context" source="logback.filesize" defaultValue="50MB"/>
    <springProperty name="LOG_FILEMAXDAY" scope="context" source="logback.filemaxday" defaultValue="7"/>
    <springProperty name="ServerIP" scope="context" source="spring.cloud.client.ip-address" defaultValue="0.0.0.0"/>
    <springProperty name="ServerPort" scope="context" source="server.port" defaultValue="0000"/>
    <!--<springProperty name="MQ_SERVER_ADDRESS" scope="context" source="spring.cloud.stream.rocketmq.binder.name-server"/>-->
<!--    <define name="MQ_SERVER_ADDRESS" class="com.notarycloud.common.log.properties.MqDefiner"/>-->
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%line){faint} %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%level){blue} %clr(${PID}){magenta} %clr([%tid]){yellow} %clr([%thread]){orange} %clr(%-40.40logger{39}){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="CONSOLE_LOG_PATTERN_NO_COLOR"
              value="%line %d{yyyy-MM-dd HH:mm:ss.SSS} ${APP_NAME} ${ServerIP}:${ServerPort} %level ${PID} %tid %thread %logger %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="CONSOLE_LOG_PATTERN_NO_COLOR_JSON"
              value="[LINE:%line] [APPNAME:${APP_NAME}] [SERVER:${ServerIP}:${ServerPort}] [TIME:%d{yyyy-MM-dd HH:mm:ss.SSS}] [TYPE:%level] [PID:${PID}] [%tid] [THREAD:%thread] [LOGGER:%logger %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}]"/>

    <!-- 控制台日志 -->
    <appender name="StdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 按照每天生成常规日志文件 -->
    <appender name="FileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}/${APP_NAME}.log</file>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--保留时间,单位:天-->
            <maxHistory>${LOG_FILEMAXDAY}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${LOG_MAXFILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
    </appender>
    <!--MQ的日志输出-->
    <!--<appender name="mqAppender" class="org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender">-->
        <!--<tag>TagLog</tag>-->
        <!--<topic>log-sys-topic</topic>-->
        <!--<producerGroup>log-sys-topic-produce-group</producerGroup>-->
        <!--<nameServerAddress>${MQ_SERVER_ADDRESS}</nameServerAddress>-->
        <!--<layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">-->
            <!--<pattern>${CONSOLE_LOG_PATTERN_NO_COLOR_JSON}</pattern>-->
        <!--</layout>-->
    <!--</appender>-->

    <!--<appender name="mqAsyncAppender" class="ch.qos.logback.classic.AsyncAppender">-->
        <!--<queueSize>1024</queueSize>-->
        <!--<discardingThreshold>80</discardingThreshold>-->
        <!--<maxFlushTime>2000</maxFlushTime>-->
        <!--<neverBlock>true</neverBlock>-->
        <!--<appender-ref ref="mqAppender"/>-->
    <!--</appender>-->
    <appender name="file_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FileAppender"/>
    </appender>

    <logger name="com.safedog" level="info" additivity="false">
        <appender-ref ref="StdoutAppender"/>
        <appender-ref ref="file_async"/>
        <!--<appender-ref ref="mqAsyncAppender"/>-->
    </logger>

    <root level="info">
        <appender-ref ref="StdoutAppender"/>
        <appender-ref ref="file_async"/>
    </root>

</configuration>
