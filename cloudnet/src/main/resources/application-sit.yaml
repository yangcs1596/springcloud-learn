#name-node
hadoop:
  enable: true
  user-name: mybk
  name-node: hdfs://hdfs1.safedog.cn:9000
  namespace: /upload/reportFile #hdfs目录
zookeeper:
  address: 192.168.89.246:2181
hbase:
  zookeeper:
    quorum: 192.168.89.246:2181
spring:
  datasource:
    mysql:
      name: mysql
      driver-class-name: com.mysql.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/cloud_system?userUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: root
    phoenix:
      name: phoenix
      driver-class-name: org.apache.phoenix.jdbc.PhoenixDriver
      #zookeeper地址
      jdbc-url: jdbc:phoenix:hdfs1.safedog.cn:2181;serializa‌​tion=PROTOBUF
      # username: hive
      # password: hive@123
    # spring-boot 2.X 默认采用高性能的 Hikari 作为连接池
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 池中维护的最小空闲连接数
      minimum-idle: 10
      # 池中最大连接数，包括闲置和使用中的连接
      maximum-pool-size: 20
      retries: 5
      # 此属性控制从池返回的连接的默认自动提交行为。默认为 true
      auto-commit: true
      # 允许最长空闲时间
      idle-timeout: 30000
      # 此属性表示连接池的用户定义名称，主要显示在日志记录和 JMX 管理控制台中，以标识池和池配置。 默认值：自动生成
      pool-name: custom-hikari
      #此属性控制池中连接的最长生命周期，值 0 表示无限生命周期，默认 1800000 即 30 分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认 30 秒，即 30000
      connection-timeout: 30000
      # 连接测试 sql 这个地方需要根据数据库方言差异而配置 例如 oracle 就应该写成  select 1 from dual
      connection-test-query: SELECT 1
  redis:
    database: 0
    #单机模式
    host: redis.safedog.cn
    port: 39807
    # Redis服务器连接密码（默认为空）
    password: Ctx1ytxA@3zdj
    #三种集群方式 主从复制，哨兵模式， Redis-Cluster模式
    #在安装redis的目录找到redis配置文件redis.conf，里面会找到配置： cluster-enabled yes
  elasticsearch:
    rest:
      uris: http://192.168.72.145:9200/
      username: elastic
      password: safedog@2018
#    cluster:
#      nodes:
#        - redis.safedog.cn:39807
#        - 172.21.0.211:7001
#        - 172.21.0.211:7002
#        - 172.21.0.211:7003
#        - 172.21.0.211:7004
#      max-redirects: 3 # 获取失败 最大重定向次数
#    ##哨兵
#    sentinel:
#      master: mymaster
#      nodes:
#        - 172.21.0.211:7005
#        - 172.21.0.211:7006
#        - 172.21.0.211:7007
#本来spring可用，怎么和mybatis的单应用结合
#hbase:
#  phoenix:
#    datasource:
#      driverClassName: org.apache.phoenix.jdbc.PhoenixDriver
#      url: jdbc:phoenix:192.168.89.246:2181


#mybatis-plus:
#  mapperLocations:
#  typeAliasesPackage:
#  configuration:
#    map-underscore-to-camel-case: true
#    cache-enabled: true
#  global-config:
#    db-config:
#      #配置全局逻辑删除，指定实体类的逻辑删除字段
#      logic-delete-field: delFlag
#      logic-delete-value: 1
#      logic-not-delete-value: 0
#      #配置主键id生成策略采用雪花算法
#      id-type: assign-id

mybatis-plus:
  #mapper-locations: classpath:mybatis/**/*Mapper.xml
  # 在classpath前添加星号可以使项目热加载成功<br>  # 自定义xml sql文件需要配置这个
  mapper-locations: classpath*:mapper/mysql/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.safedog.cloudnet.entity.mysql
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 3
    #机器 ID 部分(影响雪花ID)
    workerId: 1
    #数据标识 ID 部分(影响雪花ID)(workerId 和 datacenterId 一起配置才能重新初始化 Sequence)
    datacenterId: 18
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
  configuration:
    #是否开启自动驼峰命名规则映射
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-aliases-super-type: