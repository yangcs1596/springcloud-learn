server:
  port: 8081
  servlet:
    encoding:
      charset: UTF-8
  compression:
    enabled: true
    min-response-size: 1024
spring:
  application:
    name: cloudnet
  profiles:
    active: init, @env@
  #上传文件配置
  #  multipart:
  #    enabled: true
  #    location: C:/var/guoheng/picture/
  #    max-file-size: 10MB
  #    max-request-size: 10MB
  ###  读写分离
  #spring.profiles.active =  dev
  ###  单库多表
  #spring.profiles.active =  pro
  ###  多库单表
  #spring.profiles.active =  pro1
  ###  多库多表
  redis:
    jedis:
      #SpringBoot2.0默认采用Lettuce客户端来连接Redis服务端的
      #默认是不使用连接池的，只有配置 redis.lettuce.pool下的属性的时候才可以使用到redis连接池
      pool:
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接 默认也是0
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 1000
  #spring的aop默认使用jdk动态代理模式，此处开启cglib动态代理
  #假若我们想要代理的对象并没有实现任何接口，这时候我们就要用到CGLIB动态代理了，
  #这就是它与JDK动态代理主要不同的地方。
  aop:
    proxy-target-class: true
swagger:
  enable: ${swagger_enable}
  api-description:
    title: swagger 文档说明
    description: 不知道怎么描述
    exposure-all: true
  #url : http://xxxxx/doc.html

encrypt:
  config:
    enable: ${encrypt_enable}  #key: #密钥应该在启动时放在参数里，或者放在env里
    prefix: ENC(
    suffix: )
    version: 1.0
    key: 9armor0safe4dog1

demo: ENC(nGkRyFhFQoicg4xtPtF5ag==)

#https://sa-token.dev33.cn/doc/index.html#/
#权限配置管理
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: 3600
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格 random-64
  token-style: simple-uuid
  # 是否输出操作日志
  is-log: false
notary:
  id:
    datacenter-id: 10
    worker-id: 10
    mybatis:
      enabled: ${notary_mybatis_enable}
